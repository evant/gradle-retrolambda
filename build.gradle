import org.ajoberstar.grgit.*

buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
    }
}

apply plugin: 'groovy'
apply from : 'gradle/publishing.gradle'

repositories {
    mavenCentral()
}

group = 'me.tatarka'
version = '2.4.1'

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:0.8+'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'source'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourceJar
}



    def grgit = Grgit.open(project.projectDir)

    task checkRelease << {
        if (version.endsWith('SNAPSHOT')) {
            throw new ProjectConfigurationException("Version: $version must not end in SNAPSHOT", null)
        }
        
        def readmeVersion = file('README.md').readLines().find { it.contains('me.tatarka:gradle-retrolambda:') }?.trim()
        
        if (readmeVersion == null) {
            throw new ProjectConfigurationException("Missing README version string", null)
        }

        if (!readmeVersion.contains(":$version")) {
            throw new ProjectConfigurationException("README version string: $readmeVersion must match release version: $version", null)
        }
        
        def changelogVersion = file('CHANGELOG.md').readLines().find { it.contains("### $version") }
        if (changelogVersion == null) {
            throw new ProjectConfigurationException("CHANGELOG does not contain changes for release version: $version", null)
        }

        def branchName = grgit.branch.current.name
        if (branchName != 'master') {
            throw new ProjectConfigurationException("Branch: $branchName must be master", null)
        }
    }

    task tagRelease(dependsOn: [checkRelease]) << {
        grgit.tag.add {
            name = "v$version"
            message = "Release of $version"
        }
    }
    
    bintrayUpload.dependsOn(tagRelease)

